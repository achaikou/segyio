name: Build and Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Build and test on ${{ matrix.os }} ${{ matrix.compiler }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            cmake_generator: "-G \"Visual Studio 16 2019\" -A x64"
          - os: windows-2019
            cmake_generator: "-G \"Visual Studio 16 2019\" -A Win32"
          - os: macos-latest
            privledges: "sudo"
          - os: ubuntu-20.04
            privledges: "sudo"
          - os: ubuntu-20.04
            privledges: "sudo"
            compiler: "clang"
            analyzers: "cppcheck"
            scan: "scan-build --status-bugs"
            mkdoc: "-DBUILD_DOC=ON -DSPHINX_ARGS=-WT"
          - os: macos-latest
            privledges: "sudo"
            arch: arm64

    steps:
      - uses: actions/checkout@v2

      - name: Install clang toolchain
        if: ${{ matrix.compiler == 'clang' }}
        run: |
            sudo apt-get update
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install clang clang-tools
            echo "CC=/usr/bin/clang"    >> $GITHUB_ENV
            echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV

      - name: Run cppcheck
        shell: bash
        if: ${{ matrix.analyzer == 'cppcheck' }}
        run: |
          cppcheck
            --enable=style,portability,performance,warning
            --library=posix
            --library=cppcheck/segyio.cfg
            --suppressions-list=cppcheck/suppressions.txt
            --inline-suppr
            --project=compile_commands.json
            --error-exitcode=1

      - name: Configure
        shell: bash
        run: |
          ${{ matrix.scan }} cmake -S . -B build \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DBUILD_PYTHON=OFF \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib \
            ${{ matrix.mkdoc }} \
            ${{ matrix.cmake_generator }} \

      - name: Build and Install
        shell: bash
        run: |
            ${{ matrix.privledges }} cmake \
              --build build \
              --config Release \
              --target install \

      - name: Test
        shell: bash
        run: |
            cd build
            ctest -C Release --output-on-failure
